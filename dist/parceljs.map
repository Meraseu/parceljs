{"version":3,"sources":["parcel.js","index.js"],"names":["parcel","getOne","Promise","resolve","reject","fetch","then","res","json","data","value","joke","document","querySelector","innerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,0BAAS;AAClBC,YAAQ,YAAW;AACf,eAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,kBAAM,mCAAN,EACKC,IADL,CACUC,OAAOA,IAAIC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,QAAQ;AACVN,wBAAQM,KAAKC,KAAL,CAAWC,IAAnB;AACH,aAJL;AAKH,SANM,CAAP;AAOH;AATiB,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVP;;AAEA,eAAOV,MAAP,GACKK,IADL,CACUK,QAAQ;AACVC,aAASC,aAAT,CAAuB,OAAvB,EAAgCC,SAAhC,GAA4CH,IAA5C;AACH,CAHL,E,CAHA","file":"parceljs.map","sourcesContent":["// module.exports = {\r\n//     getOne: function() {\r\n//         return new Promise((resolve, reject) => {\r\n//             fetch('http://api.icndb.com/jokes/random')\r\n//                 .then(res => res.json())\r\n//                 .then(data => {\r\n//                     resolve(data.value.joke);\r\n//                 })\r\n//         });\r\n//     }\r\n// }\r\nexport const parcel = {\r\n    getOne: function() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch('http://api.icndb.com/jokes/random')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    resolve(data.value.joke);\r\n                })\r\n        });\r\n    }\r\n}","// const parcel = require('./parcel');\r\nimport { parcel } from './parcel';\r\n\r\nparcel.getOne()\r\n    .then(joke => {\r\n        document.querySelector('.name').innerHTML = joke\r\n    });"]}